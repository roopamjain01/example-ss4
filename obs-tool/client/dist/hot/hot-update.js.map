{"version":3,"sources":["webpack:///./src/components/BookCoverPageComponent.js"],"names":["_react","__webpack_require__","_reactRedux","_fetchBookCoverPage","_fetchBookChapterList","_changeDispalyPageName","BookCoverPageComponent","Component","this","props","dispatchFetchCoverPageAction","_this2","displayPage","Name","_react2","default","createElement","bookCoverPage","Title","Tagline","Intro","onClick","dispatchFetchChapterListAction","ID","dispatchChangeDisplayPageName","connect","state","dataState","dispatch","fetchBookCoverPage","id","fetchBookChapterList","dispalyPage","changeDispalyPageName"],"mappings":";;;;uWACAA,EAAAC,cAAA,qEACAC,EAAAD,oBAAA,0CAEAE,EAAAF,sCAAA,uCACAG,EAAAH,wCAAA,yCACAI,EAAAJ,yCAAA,0CAIA,IA4BMK,grBAA+BC,4DAIjCC,KAAKC,MAAMC,6BAA6B,sCAGjC,IAAAC,EAAAH,KAEP,MAAoC,kBAAhCA,KAAKC,MAAMG,YAAYC,KAClB,KAIPC,EAAAC,QAAAC,cAAA,WACEF,EAAAC,QAAAC,cAAA,UAAKR,KAAKC,MAAMQ,cAAcC,OAC9BJ,EAAAC,QAAAC,cAAA,UAAKR,KAAKC,MAAMQ,cAAcE,SAC9BL,EAAAC,QAAAC,cAAA,SAAIR,KAAKC,MAAMQ,cAAcG,OAC7BN,EAAAC,QAAAC,cAAA,UACEK,QAAS,WACPV,EAAKF,MAAMa,+BAA+BX,EAAKF,MAAMQ,cAAcM,IACnEZ,EAAKF,MAAMe,8BAA8B,CAACX,KAAM,kBAHpD,oCAaO,EAAAX,EAAAuB,SA3DS,SAACC,GACvB,MAAO,CACLT,cAAeS,EAAMC,UAAUV,cAC/BL,YAAac,EAAMC,UAAUf,cAIN,SAACgB,EAAanB,GACvC,MAAO,CACLC,6BAA8B,WAC5BkB,GAAS,EAAAzB,EAAA0B,oBAAmB,OAE9BP,+BAAgC,SAACQ,GAC/BF,GAAS,EAAAxB,EAAA2B,sBAAqBD,KAEhCN,8BAA+B,SAACQ,GAC9BJ,GAAS,EAAAvB,EAAA4B,uBAAsBD,OA2CtB,CAGb1B","file":"hot/hot-update.js","sourcesContent":["// @flow\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport type {RootState} from \"../types/RootState\";\nimport {fetchBookCoverPage} from \"../actions/fetchBookCoverPage\";\nimport {fetchBookChapterList} from \"../actions/fetchBookChapterList\";\nimport {changeDispalyPageName} from \"../actions/changeDispalyPageName\";\nimport type {BookCoverPage} from \"../models/BookCoverPage\";\nimport type {DisplayPage} from \"../models/DisplayPage\";\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    bookCoverPage: state.dataState.bookCoverPage,\n    displayPage: state.dataState.displayPage\n  };\n};\n\nconst mapDispatchToProps = (dispatch: *, props: Props) => {\n  return {\n    dispatchFetchCoverPageAction: () => {\n      dispatch(fetchBookCoverPage('1'));\n    },\n    dispatchFetchChapterListAction: (id: string) => {\n      dispatch(fetchBookChapterList(id));\n    },\n    dispatchChangeDisplayPageName: (dispalyPage: object) => {\n      dispatch(changeDispalyPageName(dispalyPage));\n    }\n  };\n};\n\ntype Props = {\n  bookCoverPage?: Array<BookCoverPage>,\n  displayPage?: Object<DisplayPage>,\n  dispatchFetchCoverPageAction?: (id: string) => void,\n  dispatchFetchChapterListAction?: (id: string) => void,\n};\n\nclass BookCoverPageComponent extends Component<Props> {\n\n  componentDidMount() {\n    // fetch book cover page details\n    this.props.dispatchFetchCoverPageAction('1');\n  }\n\n  render() {\n\n    if (this.props.displayPage.Name !== \"bookCoverPage\") {\n      return null;\n    }\n\n    return (\n      <div>\n        <h2>{this.props.bookCoverPage.Title}</h2>\n        <h3>{this.props.bookCoverPage.Tagline}</h3>\n        <p>{this.props.bookCoverPage.Intro}</p>\n        <button\n          onClick={() => {\n            this.props.dispatchFetchChapterListAction(this.props.bookCoverPage.ID);\n            this.props.dispatchChangeDisplayPageName({Name: 'chapterList'});\n          }}\n        >\n        Get Started\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(BookCoverPageComponent);\n"],"sourceRoot":""}